Member Contributions

Brandon Zhao -

Milestone 1: Helped write project proposal, Did SQL test case programming

Milestone 2:

Final Demo: Helped resolve a couple issues on backend, mainly with filter (implemented flexible time fields and fixed filtering for sleeping/waking times, also added room type preference to filter)

Also helped Ashley to make CSS for about page, and fixed miscellaneous CSS bugs throughout (mainly with picture/box alignment)

Wrote 2 slides in the final presentation

Ashley Murray -

Milestone 1: wrote the python code to generate sample dataset, which was built upon by other members. Helped create load.sql.

Milestone 2: built upon the html framework to add more design elements.  Created icons in Photoshop for added user experience.

Worked with fixing all the elements using CSS, helped by Brandon Xie and Brandon Zhao. Created the overall design for a better UX/UI.

Webscrapped a website that helps people find roommates for the sample dataset in the Blog_Post table. Created the second load.sql in order to load in these blog posts into the database. Worked on the final presentation, and fixing other bugs found in the site for the demo.

Niko Hobart -

Milestone 1: Made the create.sql and load.sql files.

Milestone 2: Designed, coded, and integrated the matching algorithm. Configured and integrated the Postgresql database--involved redesigning and implementing new models.py, load.sql, create.sql and providing instructions on how to make local copy. Created preliminary large-scale database generator. Wrote up new ER diagram and relevant tables.

Final Demo: Did some debugging--mainly revised the way the algorithm carries out matching after a couple of input assumptions were changed. Also added additional info to a couple slides.

Yuning (Tommy) Yang -

Milestone 1: Came up with the idea of the project. Designed E/R diagram and the database. Made create.sql.

Milestone 2: Basically worked as a full stack engineer.

Frontend: built the whole web interface with Flask and Jinja, including user registration, login logout, account page, match page, and home showing all the blog posts.

Backend: CRDU (create, read, delete, update) of users with their housing preferences; also CRDU of user blogposts.

Database: Worked with Niko to translate create.sql into models.py (SQLAlchemy)

Final Demo: Made a filter for the matching page, allowing users to customize their matching results. Deployed our app to Heroku. Cleaned up a few bugs and made pagination to the matching page.
